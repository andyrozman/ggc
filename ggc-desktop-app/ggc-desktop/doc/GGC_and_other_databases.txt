GGC and other databases
=======================

GGC is implemented with help of Hibernate framework, which allows it use of great many databases. 
We use Hibernate 3.1, which supports about 20 different databases. Rule of the thumb for GGC 
is that if database has valid JDBC driver, it is supported by us.

For GGC to work with your database, there are several points, which need to be addressed.


A.) Prepare Db and GGC
======================= 

1.) You need to find correct JDBC (type 2, 3 or 4) driver for your database (with documentation)

2.) In database you need to create empty database and user, which can create/drop tables and
    write/delete/edit data in database.
    
3.) In <GGC>\data\nutrition you need to have USDA database version 18 present. If you did full install 
    of GGC, this should already be there.

4.) Put JDBC file from step 1 and put it into <GGC>\lib\jdbc

5.) Now we need to remove file <GGC>\data\StartupStatus.txt (this will force to rebuild startup files and
    include our new jdbc file).  Start GGC to force rebuild.
    
6.) Optional. Additional configuration of your SQL server. In most cases JDBC are written to communicate 
    with server through TCP/IP, but this can differ and is totally dependent on your JDBC.    
    
    
    
B.) Change configuration of GGC and create needed tables for GGC
=================================================================

In future there will be application DbTool which will help to create correct connection strings, for 
each of supported databases and also initialization of thoose databases. In the mean time we need to do 
this by hand.

1.) Edit GGC_Config.properties
-------------------------------

Currently this is the only DB entry in this file.

DB0_CONN_NAME=Internal Db (H2)
DB0_DB_NAME=H2 SQL
DB0_CONN_DRIVER_CLASS=org.h2.Driver
DB0_CONN_URL=jdbc:h2:../data/db/ggc_db
DB0_CONN_USERNAME=sa
DB0_CONN_PASSWORD=
DB0_HIBERNATE_DIALECT=org.hibernate.dialect.H2Dialect
 
now we will create new entry (please look in appendix A):

We will take MS Sql server as test: (I have newer driver so we need to take v3 driver) 
// Microsoft SQL Server (MS JDBC driver 3)
"Microsoft SQL Server MS JDBC v3", "com.microsoft.sqlserver.jdbc.SQLServerDriver", "jdbc:sqlserver://<hostname>:<port>;DatabaseName=<database>", "1433", "SQLServerDialect",

We have now 5 different information pieces. Now this information can be different and can depend on 
your JDBC. You will have to look at that information.

 
a.) Connection name
--------------------
DB1_CONN_NAME=Test Db [MS SQL]


b.) Db Name
------------
Db name must match name in this table.

DB1_DB_NAME=Microsoft SQL Server MS JDBC v3


c.) JDBC Class path
--------------------
Now we add class (this can be different for each JDBC (*JDBC*)    
    
DB1_CONN_DRIVER_CLASS=com.microsoft.sqlserver.jdbc.SQLServerDriver
                      
    
d.) Connection URL
-------------------
Connection url (we need full url here).

"jdbc:microsoft:sqlserver://<hostname>:<port>;DatabaseName=<database>"

DB1_CONN_URL=jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=GGC

in this case if you have instance you would use this (this JDBC specific)    

DB1_CONN_URL=jdbc:microsoft:sqlserver://localhost\\SQLExpress;DatabaseName=GGC
    
    
e.) Connection user/password    
-----------------------------

We need to specify user and password here
    
DB1_CONN_USERNAME=sa
DB1_CONN_PASSWORD=sapass
    
    
f.) Dialect
------------

This is most important paramater. Even if you have third party JDBC, this information will be same for
all JDBC drivers. We need to prefix value from information with (org.hibernate.dialect.)

DB1_HIBERNATE_DIALECT=org.hibernate.dialect.SQLServerDialect


Now we just need to set active database (to our new entry).

SELECTED_DB=1 



2.) Now we just need to fill our new database with tables and basic data


We need to edit db_init.<ext> file. We need to add following information (in correct notation):
../lib/utils/pygmy-core-0.2.jar;../lib/utils/pygmy-handlers-0.2.jar


3.) Run db_init.<ext>

    There will be a lot of data printed here. If you notice that there was exception halt process, and 
    find first time exceptionm is thrown. There will be little more information what the problem is.
    In most cases we need to enable tcp/ip on our server, or set any other server specific stuff.
    



    
Andy    
Project manager





















    
    
==============================================================================================

APPENDIX A: Available databases



// DB2
"DB2", 
"com.ibm.db2.jcc.DB2Driver", 
"jdbc:db2://<hostname>:<port>/<database>", 
"", 
"DB2Dialect",

// DB2 AS/400
"DB2 AS/400", 
"com.ibm.db2.jcc.DB2Driver", 
"jdbc:db2://<hostname>:<port>/<database>", 
"", 
"DB2400Dialect",

// DB2 OS390
"DB2 OS390", 
"com.ibm.db2.jcc.DB2Driver", 
"jdbc:db2://<hostname>:<port>/<database>", 
"", 
"DB2390Dialect",

// Derby
"Derby", 
"org.apache.derby.jdbc.EmbeddedDriver", 
"jdbc:derby:;databaseName=<database>;user=<username>;password=<password>", 
"", 
"DerbyDialect",

// Derby Read-only JAR
"Derby Read-only JAR", 
"org.apache.derby.jdbc.EmbeddedDriver", 
"jdbc:derby:jar:(<path_to_archive>)<path_within_archive>;user=<username>;password=<password>", 
"", 
"DerbyDialect",

// FrontBase
"FrontBase", "com.frontbase.jdbc.FBJDriver", "jdbc:FrontBase://<hostname>:<port>/<database>", "", "FrontbaseDialect",

// Firebird
"Firebird", "org.firebirdsql.jdbc.FBDriver", "jdbc:firebirdsql://<db_tag>:<port>/<db_path>", "3050", "FirebirdDialect",

// HypersonicSQL
"HypersonicSQL Server", "org.hsqldb.jdbcDriver", "jdbc:hsqldb:hsql://<hostname>/<database>", "", "HSQLDialect",

// HypersonicSQL
"HypersonicSQL File", "org.hsqldb.jdbcDriver", "jdbc:hsqldb:file:<db_path>", "", "HSQLDialect",

// HypersonicSQL
"HypersonicSQL Memory", "org.hsqldb.jdbcDriver", "jdbc:hsqldb:mem:<db_tag>", "", "HSQLDialect",

// Informix
"Informix", "com.informix.jdbc.IfxDriver", "jdbc:informix-sqli://<hostname>:<port>/<database>:informixserver=<db_server_name>", "", "InformixDialect",

// Ingres
"Ingres", "ca.edbc.jdbc.EdbcDriver", "jdbc:edbc://<hostname>:<port>/<database>-<server_class>", "", "IngresDialect",

// Interbase
"Interbase", "interbase.interclient.Driver", "jdbc:interbase://<hostname>/<database>", "", "InterbaseDialect",

// JDataStore
"JDataStore", "com.borland.datastore.jdbc.DataStoreDriver", "jdbc:borland:dslocal:<file>", "", "JDataStoreDialect",

// Microsoft SQL Server
"Microsoft SQL Server", "com.microsoft.jdbc.sqlserver.SQLServerDriver", "jdbc:microsoft:sqlserver://<hostname>:<port>;DatabaseName=<database>", "1433", "SQLServerDialect",


// Microsoft SQL Server (MS JDBC driver 3)
"Microsoft SQL Server MS JDBC v3", "com.microsoft.sqlserver.jdbc.SQLServerDriver", "jdbc:sqlserver://<hostname>:<port>;DatabaseName=<database>", "1433", "SQLServerDialect",


// Mckoi SQL
"Mckoi SQL", "com.mckoi.JDBCDriver", "jdbc:mckoi://<hostname>:<port>/<database>/", "", "MckoiDialect",

// Mimer
"MimerSQL", "com.mimer.jdbc.Driver", "jdbc:mimer://<hostname>/<database>", "", "MimerSQLDialect",

// MySQL
"MySQL", "com.mysql.jdbc.Driver", "jdbc:mysql://<hostname>:<port>/<database>?user=<username>&password=<password>&useUnicode=true&characterEncoding=utf-8", "", "MySQLDialect",

// MySQL InnoDb
"MySQL InnoDb", "com.mysql.jdbc.Driver", "jdbc:mysql://<hostname>:<port>/<database>?user=<username>&password=<password>&useUnicode=true&characterEncoding=utf-8", "", "MySQLInnoDBDialect",

// MySQL MyIsam
"MySQL MyISAM", "com.mysql.jdbc.Driver", "jdbc:mysql://<hostname>:<port>/<database>?user=<username>&password=<password>&useUnicode=true&characterEncoding=utf-8", "", "MySQLMyISAMDialect",

// Oracle (any version)
"Oracle (any version)", "oracle.jdbc.OracleDriver", "jdbc:oracle:oci:@<hostname>:<port>:<sid>", "1521", "OracleDialect",

// Oracle 9/10g
"Oracle 9/10g", "oracle.jdbc.OracleDriver", "jdbc:oracle:oci:@<hostname>:<port>:<sid>", "1521", "Oracle9Dialect",

// Pointbase
"Pointbase", "com.pointbase.jdbc.jdbcUniversalDriver", "jdbc:pointbase:server://<hostname>/<database>", "", "PointbaseDialect",

// PostgreSQL
"PostgreSQL", "org.postgresql.Driver", "jdbc:postgresql://<hostname>:<port>/<database>?user=<username>&password=<password>", "5432", "PostgreSQLDialect",

// Progress
"Progress", "com.progress.sql.jdbc.JdbcProgressDriver", "jdbc:jdbcprogress:T:<hostname>:<port>|<service_name>:<database>", "", "ProgressDialect",

// RDMSOS2200Dialect
"RDMSOS 2200", "com.unisys.os2200.rdms.jdbc.RdmsDriver", "jdbc:rdms:schema=<database>; host=<hostname>; port=<port>", "", "RDMSOS2200Dialect",

// SAP DB
"SAP DB", "com.sap.dbtech.jdbc.DriverSapDB", "jdbc:sapdb://<hostname>:<port>/<database>", "", "SAPDBDialect",

// Sybase
"Sybase", "com.sybase.jdbc3.jdbc.SybDriver", "jdbc:sybase:Tds:<hostname>:<port>/<database>", "2048", "SybaseDialect",

// Sybase 11
"Sybase 11", "com.sybase.jdbc3.jdbc.SybDriver", "jdbc:sybase:Tds:<hostname>:<port>/<database>", "2048", "Sybase11Dialect",

// Sybase Anywhere
"Sybase Anywhere", "com.sybase.jdbc3.jdbc.SybDriver", "jdbc:sybase:Tds:<hostname>:<port>/<database>", "2048", "SybaseAnywhereDialect",

// TimesTenDialect
"TimesTen", "com.timesten.jdbc.TimesTenDriver", "jdbc:timesten:direct:<database>", "", "TimesTenDialect",

// H2 SQL 
"H2 SQL", "org.h2.Driver", "jdbc:h2:<db_path>", "", "H2Dialect",

    // Unknown
    "Unsupported Db", "Undefined", "Undefined", "", "Dialect",

