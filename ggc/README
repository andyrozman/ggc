
GNU Gluco Control (GGC)
=======================

This readme file has now four section, which are:
I.   GGC BASIC INFORMATION
II.  USER INFORMATION
III. TRANSLATORS INFORMATION
IV.  DEVELOPERS INFORMATION

End users, only need to read first section, translator first and second, and 
developers, all 3 of them.

At this time there is no user release for GGC, so users must install everything 
with help of development section.



*******************************
I.  USER INFORMATION
*******************************

1. About
========
GNU Gluco Control (GGC) is a pure Java application helping you to manage your
diabetes.


2. Status
=========

As before we at very early stage of development. This latest version is little buggy. 
We are in transition to Hibernate and we don't have 100% functionality at this point 
of time.

This version (0.2.1) is not intended for end users. Version intended for end users 
will be deployed on sourceforge.net, at first point where we have somewhat workable 
version (planned for end of May 2006).

   


*******************************
II.  USER INFORMATION
*******************************

Not yet done.


*******************************
III.  TRANSLATORS INFORMATION
*******************************

I18nCheck - This utility helps translators to see if their language file has all 
    keywords in language files (in development process we add keywords in default
    language file (english), so translators only need to translate new keywords).

Note: Langauge file must be ASCII file with unicode escape codes. Translator are 
    not limited with this. They can use any UTF like editor, and type their characters
    without problems. At end of translation they need to run JDK tool native2ascii,
    which will change your characters into unicode escape sequences (be carefull, you
    must save language file in utf).



*******************************
IV.  DEVELOPERS INFORMATION
*******************************

1. How to install (CVS Version)
===============================

Install is little tricky. 

1. Please get newest version from CVS. 

2. Go to build directory. Rename GGCBuild.properties_default to GGCBuild.properties. Edit 
    GGCBuild.properties to reflect your directories. 
    
3. Please follow instructions in "GGC ANT Build How-TO.txt" and build everything.

4. Copy files from source directory to your build (classes) directory.
	GGC_*.properties
	log4j.properties
	*.hbm.xml
	run.cmd

5. Install Database. For testing purposes there was built internal database placed into cvs.
    You must download ggc_db.zip (ggc_db_nutr.zip if you want whole nutrition database).
    Put files into ../data directory. 
    
    If you wish to use your own external database see GGC_Config.properties and edit it
    accordingly (don't forget to set SELECTED_DB). In CVS there is test_nutrition.zip 
    where you can find special *.cmd file which must be edited and you can use it to create 
    database and add nutrition entries (you must put nutrition database (found in ggc-support 
    files on sf.net)) to directory ../data/nutrition.
    
6. Run ggc software: (first edit run.cmd)
    run.cmd




Not yet done.





















OLD README
----------



GNU Gluco Control (GGC) is a pure Java application helping you to manage your
diabetes.

Currently, we are in a very early stage of development.

You need the commapi:
 javacomm api <http://java.sun.com/products/javacomm>
installed on your system, if you want to access your "GlucoCard" Meter. It is
the only meter avaible to me, so there will be no support for additional
meters in the near future. But, you are invited to write on, or give us the
protocol specification for your meter ;-)

If you want to store your data in a MySQL Database (recommended), you need this 
driver:
 mm.mysql.jdbc <http://www.mysql.com/downloads/api-jdbc.html>

Install:
========

CVS:

1. Get the sources from the sf cvs servers.
2. Compile them.
3. Run GGC:

	#java ggc

   Hint: I need to run the VM with the -noverify switch, to get the commapi
   running:

	#java -noverify ggc

(Make sure you have all required classes in your classpath)

Packaged Version:

1. Download the package (from sourcforge).
2. Extract it:

        #gunzip ggc_<version>.tar.gz

3. Untar it:
	
	#tar xf ggc_<version>.tar

   This will create a new directory named 'ggc'. There you find all resources,
   sources and a *.jar file.

4. Run GGC:

	#java -jar ggc.jar

5. Have fun while testing.

Future:
=======

The first version which is indented for _normal_ users (!= programmer) will
be version 0.1! Until this release only developers should use the program.
