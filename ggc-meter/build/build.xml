<?xml version="1.0" ?>
<project name="GNU Gluco Control" default="build" basedir=".">
    <description>
        Build file for GGC
    </description>

    <!-- Environment properties read from a file ...-->
    <property file="./GGCBuild.properties"/>
    <property file="./GGCVersion.properties"/>
    

    <!-- These should *not* be modified on the command line! -->
    <property name="build.dir" value="${outdir.dir}/classes"/>
    <property name="deploy.dir" value="${outdir.dir}/deploy"/>
    
    
    <!-- Build GGC  -->
    
    <target name="build">
        <echo message="   ************************************************* "/>
        <echo message="   ****            GGC Meter Tool Build         **** "/>
        <echo message="   ************************************************* "/>
        <echo message=""/>
        <echo message="     copy = copies all needed files"/>
        <echo message="     clean = clean build dir"/>
        <echo message="     build_ggc (make) = build GGC (recompile classes)"/>
        <echo message="     jar = create GGC jar"/>
        <echo message="     jar_core = create GGC Core jar"/>
        <echo message="     jar_l = create GGC Little jar"/>
        <echo message="     full = clean, build_ggc, copy, jar, jar_l"/>
        <echo message="     dist = full, and create distribution zip file (contains needed libs, and data files)" />
        <echo message="     style (_devel, _deploy) = checkstyle against our rules" />
        <echo message=""/>
    </target>


    <!-- Public targets -->
        
    <target name="clean" description="Clean build directory and previus version of GGC">
        <delete dir="${build.dir}/ggc"/>
        <delete dir="${build.dir}/icons"/>
        <delete file="${build.dir}/ggc.jar"/>
    </target>


    <target name="copy" description="Copy all needed files">
    	<mkdir dir="${build.dir}" />
        <copy todir="${build.dir}/" overwrite="true">
            <fileset dir="${source.dir}" casesensitive="no">
                <include name="*.properties"/>
            </fileset>
        </copy>
        <mkdir dir="${build.dir}/icons" />
        <copy todir="${build.dir}/icons" overwrite="true">
            <fileset dir="${source.dir}/icons" casesensitive="no">
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>
    </target>




    <target name="make"  description="Build GGC">
        <mkdir dir="${build.dir}" />
        <javac srcdir="${source.dir}"
            destdir="${build.dir}"
            includes="ggc/meter/**"
           deprecation="off" debug="true"> <!-- debug="${debug}    DummyHandler.java, ggc/db/HSQLHandler.java, ggc\db\MySQLHandler, ggc/db/TextFileHandler.java"  --> 
            
            <classpath>
                <pathelement path="${comunication.api}" />
                <pathelement path="${atech-tool.api}"/>
            </classpath>
        </javac>
    </target>


<!--
     <target name="build_ggc"  description="Build GGC" />

           includes="ggc/**"
            excludes="ggc/db/**"  


-->

    <target name="jar"  depends="jar_meter_tool" />


    <target name="jar_meter_tool"  description="Build GGC Core" depends="make">
        <jar jarfile="${binary.dir}/ggc-meter-tool-${ggc-meter-tool.version}.jar"
             update="false" 
             index="false"
             manifest="./manifest_ggc_core.mf">

            <fileset dir="${build.dir}">
                <include name="ggc/meter/**"/>
                <include name="ggc/data/**"/>
                <include name="ggc/gui/**"/>
            </fileset>
            <fileset dir="${source.dir}">
                <include name="*.properties"/>
            </fileset>

        </jar>
    </target>



    <target name="dev" depends="clean, copy, make">    
    </target>




    <target name="full" depends="clean, copy, jar_meter_tool">    
    </target>

    <target name="dist">    
        <echo message="This option is not available yet." />
    </target>


    <target name="style_deploy">    
        <taskdef resource="checkstyletask.properties" classpath="${library.dir}/devel/checkstyle-all-4.1.jar" />

        <checkstyle config="ggc_deploy.xml">
            <fileset dir="${source.dir}" includes="**/*.java"/>

            <formatter type="plain"/>
            <formatter type="xml" toFile="checkstyle_errors.xml"/>
        </checkstyle>

    </target>

    <target name="style_devel">    
        <taskdef resource="checkstyletask.properties" classpath="${library.dir}/devel/checkstyle-all-4.1.jar" />

        <checkstyle config="ggc_devel.xml">
            <fileset dir="${source.dir}" includes="**/*.java"/>

            <formatter type="plain"/>
            <formatter type="xml" toFile="checkstyle_errors.xml"/>
        </checkstyle>
    </target>


 


</project>

