<?xml version="1.0" ?>
<project name="GNU Gluco Control" default="build" basedir=".">
    <description>
        Build file for GGC
    </description>

    <!-- Environment properties read from a file ...-->
    <property file="../../build/AtechTools.properties"/>
    <property file="../../ggc-core/build/GGCBuild.properties"/>
    <property file="./GGC_Desktop_Version.properties"/>
    <property file="../../ggc-core/build/GGC_Core_Version.properties"/>
    

    <!-- These should *not* be modified on the command line! -->
    <property name="build.dir" value="${outdir.dir}/classes"/>
    <property name="deploy.dir" value="${outdir.dir}/deploy"/>
    
    
    <!-- Build GGC  -->
    
    <target name="build">
        <echo message="   ************************************************* "/>
        <echo message="   ****                  GGC Build               **** "/>
        <echo message="   ************************************************* "/>
        <echo message=""/>
        <echo message="     copy = copies all needed files"/>
        <echo message="     clean = clean build dir"/>
        <echo message="     build_ggc (make) = build GGC (recompile classes)"/>
        <echo message="     jar = create GGC jar"/>
        <echo message="     jar_'part' = create specified GGC jar"/>
        <echo message="         available parts are: core, lang, little, main"/>
        <echo message="     jars_full = all jars"/>
        <echo message="     full = clean, build_ggc, copy, jars_full"/>
        <echo message="     deploy = full, copy files to main directory"/>
        <echo message="     dist = full, and create distribution zip file (contains needed libs, and data files)" />
        <echo message="     style (_devel, _deploy) = checkstyle against our rules" />
        <echo message=""/>
    </target>


    <!-- Public targets -->
        
    <target name="clean" description="Clean build directory and previus version of GGC">
        <delete dir="${build.dir}/ggc"/>
        <delete dir="${build.dir}/com"/>
        <delete dir="${build.dir}/org"/>
        <delete dir="${build.dir}/icons"/>
        <delete file="${build.dir}/ggc-main*.jar"/>
        <delete file="${build.dir}/ggc-little*.jar"/>
    </target>


    <target name="copy" description="Copy all needed files">
        <copy todir="${build.dir}/" overwrite="true">
            <fileset dir="${source.dir}" casesensitive="no">
                <include name="GGC_*.properties"/>
            </fileset>
        </copy>
        <mkdir dir="${build.dir}/icons" />
        <copy todir="${build.dir}/icons" overwrite="true">
            <fileset dir="${source.dir}/icons" casesensitive="no">
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>
    </target>




    <target name="make"  description="Build GGC">
        <javac srcdir="${source.dir}"
            destdir="${build.dir}"
            includes="ggc/**, org/**, com/**"
            excludes="ggc/db/DummyHandler.java, ggc/db/HSQLHandler.java, ggc/db/MySQLHandler.java, ggc/db/TextFileHandler.java, ggc/data/meter2/**"
           deprecation="off" debug="true"> <!-- debug="${debug}    DummyHandler.java, ggc/db/HSQLHandler.java, ggc\db\MySQLHandler, ggc/db/TextFileHandler.java"  --> 
            
            <classpath>
                <pathelement path="${hibernate_cpath}" />
                <pathelement path="${utils_cpath}"/>
                <pathelement path="${classpath.full}"/>
            	<pathelement path="../../build/deploy_files/ggc-core-${ggc-core.version}.jar"/>
             </classpath>
        </javac>
    </target>

     <target name="build_ggc"  description="Build GGC" />

<!--

           includes="ggc/**"
            excludes="ggc/db/**"  


-->

    <target name="jar_main"  description="Build GGC Main GUI jar" depends="make">
        <jar jarfile="${binary.dir}/ggc-main-${ggc-main.version}.jar"
             update="false" 
             index="false"
             manifest="./manifest_ggc.mf">

            <fileset dir="${build.dir}">
                <include name="ggc/GGC.class"/>
                <include name="ggc/gui/**"/>
                <exclude name="ggc/gui/little/**"/>
                <include name="icons/*.gif"/>
                <include name="icons/*.jpg"/>
                <include name="icons/*.png"/>
            </fileset>
        </jar>
    </target>






    <target name="jar_little"  description="Build GGC Little" depends="make">
        <jar jarfile="${binary.dir}/ggc-little-${ggc-little.version}.jar"
             update="false" 
             index="false"
             manifest="./manifest_ggc_little.mf">

            <fileset dir="${build.dir}">
                <include name="ggc/gui/little/**"/>
                <include name="ggc/gui/view/**"/>
                <include name="icons/*.gif"/>
                <include name="icons/*.jpg"/>
                <include name="icons/*.png"/>
            </fileset>
        </jar>
    </target>


    <target name="dev" depends="clean, copy, make">    
    </target>


    <target name="jars_full" depends="jar_main, jar_little">    
    </target>


    <target name="full" depends="clean, copy, jars_full">    
    </target>

    <target name="deploy" depends="full">
    	<copy file="${binary.dir}/ggc-main-${ggc-main.version}.jar" todir="../../build/deploy_files/"/>
    	<copy file="${binary.dir}/ggc-little-${ggc-little.version}.jar" todir="../../build/deploy_files/"/>
    </target>
	
	
    <target name="dist">    
        <echo message="This option is not available yet." />
    </target>


    <target name="style_deploy">    
        <taskdef resource="checkstyletask.properties" classpath="${library.dir}/devel/checkstyle-all-4.1.jar" />

        <checkstyle config="ggc_deploy.xml">
            <fileset dir="${source.dir}" includes="**/*.java"/>

            <formatter type="plain"/>
            <formatter type="xml" toFile="checkstyle_errors.xml"/>
        </checkstyle>

    </target>

    <target name="style_devel">    
        <taskdef resource="checkstyletask.properties" classpath="${library.dir}/devel/checkstyle-all-4.1.jar" />

        <checkstyle config="ggc_devel.xml">
            <fileset dir="${source.dir}" includes="**/*.java"/>

            <formatter type="plain"/>
            <formatter type="xml" toFile="checkstyle_errors.xml"/>
        </checkstyle>
    </target>


</project>

